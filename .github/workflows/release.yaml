---
# Publish the Nix flake outputs to Cachix
# shamelessy stolen from:
# https://sourcegraph.com/github.com/helix-editor/helix/-/blob/.github/workflows/cachix.yml
name: release
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "30 1 1-7,14-21 * 5"

env:
  IMAGE_NAME: ghcr.io/hurricanehrndz/pdenv

jobs:
  cachix:
    name: Publish Flake to Cachix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v22

      - name: Authenticate with Cachix
        uses: cachix/cachix-action@v12
        with:
          name: hurricanehrndz
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Update flake inputs
        run: >
          nix flake update --accept-flake-config --no-use-registries

      - uses: EndBug/add-and-commit@v9
        with:
          message: "Flake: update input"
          default_author: github_actions

      - name: Build and Publish nix flake
        run: >
          cachix watch-exec hurricanehrndz -- nix build \
            --accept-flake-config \
            --show-trace
  docker:
    name: Push Personal Dev Env OCI to Github Container Reistry
    needs: [cachix]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["amd64", "arm64"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install nix
        uses: cachix/install-nix-action@v22

      - name: Authenticate with Cachix
        uses: cachix/cachix-action@v12
        with:
          name: hurricanehrndz
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: build
        name: Build
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')-${{ matrix.arch }}"
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          nix run \
            --file docker.nix \
            --argstr name "$IMAGE_NAME" \
            --argstr tag "$IMAGE_TAG" \
            --argstr rev ${{ github.sha }} \
            copyToRegistry

  docker-manifest:
    name: Create Multi-Arch Image
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: manifest
        name: Create and Push mainfest to Github Container Registry
        run: |
          IMAGE_TAG="$(echo ${{ github.ref_name }} | sed -e 's/^v//')"
          echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          docker buildx imagetools create -t "${IMAGE_NAME}:${IMAGE_TAG}" \
            "${IMAGE_NAME}:${IMAGE_TAG}-amd64" \
            "${IMAGE_NAME}:${IMAGE_TAG}-arm64"

      - name: Verify Image on GitHub Container Registry
        run: docker buildx imagetools inspect "${IMAGE_NAME}:${IMAGE_TAG}"
        env:
          IMAGE_TAG: ${{ steps.manifest.outputs.tag }}

permissions:
  contents: write
  packages: write
